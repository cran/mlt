
R version 3.3.2 (2016-10-31) -- "Sincere Pumpkin Patch"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library("mlt")
Loading required package: basefun
Loading required package: variables
> set.seed(29)
> 
> n <- 100
> p <- 2
> x <- matrix(runif(n * p), nrow = n)
> beta <- c(1, -1)
> y <- factor(rbinom(n, size = 1, prob = plogis(x %*% beta)))
> df <- data.frame(y = y, x)
> 
> m1 <- glm(y ~ X1 + X2, data = df, family = binomial())
> coef(m1)
(Intercept)          X1          X2 
  0.7372381  -0.3848546  -0.8292045 
> 
> m <- ctm(~ y, shift = ~ X1 + X2, todist = "Logis", data = df)
> m2 <- mlt(m, data = df, fixed = c("y1" = 0))
Warning message:
In R.factor(object = data[[response]]) : response is unordered factor;
             results may depend on order of levels
> coef(m2)
(Intercept)          y1          X1          X2 
 -0.7372250   0.0000000   0.3848409   0.8291921 
> 
> max(abs(coef(m1) + coef(m2)[-2]))
[1] 1.363248e-05
> 
> logLik(m1)
'log Lik.' -68.12815 (df=3)
> logLik(m2)
'log Lik.' -68.12815 (df=3)
> 
> library("nnet")
> 
> m1 <- multinom(Species ~ ., data = iris)
# weights:  18 (10 variable)
initial  value 164.791843 
iter  10 value 16.177348
iter  20 value 7.111438
iter  30 value 6.182999
iter  40 value 5.984028
iter  50 value 5.961278
iter  60 value 5.954900
iter  70 value 5.951851
iter  80 value 5.950343
iter  90 value 5.949904
iter 100 value 5.949867
final  value 5.949867 
stopped after 100 iterations
> coef(m1)
           (Intercept) Sepal.Length Sepal.Width Petal.Length Petal.Width
versicolor    18.69037    -5.458424   -8.707401     14.24477   -3.097684
virginica    -23.83628    -7.923634  -15.370769     23.65978   15.135301
> 
> oiris <- iris
> oiris$Species <- ordered(oiris$Species)
> 
> r <- as.basis(oiris$Species)
> #r <- as.basis(~ Species, data = oiris, remove_intercept = TRUE,
> #              contrasts.arg = list(Species = function(n)
> #                  contr.treatment(n, base = 3)),
> #              ui = diff(diag(2)), ci = rep(0, 1))
> 
> m <- ctm(r, interacting = as.basis(~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width, data = oiris),
+            todistr = "Logis")
> m2 <- mlt(m, data = oiris)
> coef(m2)
 Species1:(Intercept)  Species2:(Intercept) Species1:Sepal.Length 
            0.3463234            42.6428122             3.3943753 
Species2:Sepal.Length  Species1:Sepal.Width  Species2:Sepal.Width 
            2.4651686             9.4840984             6.6812881 
Species1:Petal.Length Species2:Petal.Length  Species1:Petal.Width 
          -14.2280962            -9.4300870           -10.3368149 
 Species2:Petal.Width 
          -18.2875441 
> 
> s <- sort(unique(oiris$Species))
> 
> pp2 <- predict(m2, newdata = oiris, q = s, type = "density")
> 
> pp1 <- predict(m1, newdata = iris, type = "prob")
> 
> max(abs(pp1 - t(pp2)))
[1] 0.001198322
> 
> 
> proc.time()
   user  system elapsed 
  0.972   0.024   0.995 
