
R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library("MASS")
> 
> mp <- polr(Sat ~ Infl, weights = Freq, data = housing)
> 
> library("mlt")
Loading required package: basefun
Loading required package: variables
> 
> s <- as.basis(~ Infl, data = housing, remove_intercept = TRUE)
> r <- as.basis(housing$Sat)
> #r <- as.basis(~ Sat, data = housing, remove_intercept = TRUE,
> #              contrasts.arg = list(Sat = function(n) 
> #                  contr.treatment(n, base = 3)),
> #              ui = diff(diag(2)), ci = 0)
> 
> m <- ctm(r, shift = s, todist = "Logi")
> 
> mod <- mlt(m, data = housing, weights = housing$Freq)
> 
> logLik(mp)
'log Lik.' -1771.708 (df=4)
> logLik(mod)
'log Lik.' -1771.708 (df=4)
> 
> coef(mp)
InflMedium   InflHigh 
 0.5635756  1.2486832 
> mp$zeta
 Low|Medium Medium|High 
 -0.2013727   0.9484658 
> coef(mod)
      Sat1       Sat2 InflMedium   InflHigh 
-0.2013763  0.9484755 -0.5635787 -1.2486719 
> 
> sqrt(diag(vcov(mp)))

Re-fitting to get Hessian

 InflMedium    InflHigh  Low|Medium Medium|High 
 0.10357053  0.12479361  0.07662596  0.08024304 
> sqrt(diag(vcov(mod)))
      Sat1       Sat2 InflMedium   InflHigh 
0.07662594 0.08024300 0.10357051 0.12479358 
> 
> proc.time()
   user  system elapsed 
  0.864   0.040   0.899 
